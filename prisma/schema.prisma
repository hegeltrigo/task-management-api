generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

   // AÃ±adimos el campo password (opcional si quieres implementar login tradicional)
  password  String?  @db.VarChar(255)

  assignedTasks Task[]
}

model Project {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tasks Task[]
}

model Task {
  id          String    @id @default(uuid())
  title       String
  description String?
  status      TaskStatus @default(TODO)
  priority    TaskPriority @default(MEDIUM)
  dueDate     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  projectId   String
  project     Project  @relation(fields: [projectId], references: [id])
  
  assigneeId  String?
  assignee    User?    @relation(fields: [assigneeId], references: [id])

  tags        Tag[]

  @@index([status], name: "idx_task_status")
  @@index([priority], name: "idx_task_priority")
  @@index([assigneeId], name: "idx_task_assignee")
  @@index([projectId], name: "idx_task_project")
  @@index([dueDate], name: "idx_task_due_date")
  // for frequently searched tasks by creation date:
  @@index([createdAt], name: "idx_task_created_at") 
}

model Activity {
  id        String   @id @default(uuid())
  taskId    String
  userId    String
  action    String
  changes   Json
  taskTitle String   // Campo denormalizado
  userName  String   // Campo denormalizado
  createdAt DateTime @default(now())

  @@index([taskId])
  @@index([userId])
  @@index([createdAt])
}

model Tag {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())

  tasks     Task[]
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
  URGENT
}


